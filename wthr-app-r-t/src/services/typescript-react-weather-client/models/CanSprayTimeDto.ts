/* tslint:disable */
/* eslint-disable */
/**
 * WeatherApplication
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CanSprayTimeDto
 */
export interface CanSprayTimeDto {
    /**
     * 
     * @type {Date}
     * @memberof CanSprayTimeDto
     */
    date?: Date;
    /**
     * 
     * @type {number}
     * @memberof CanSprayTimeDto
     */
    temperature?: number;
    /**
     * 
     * @type {number}
     * @memberof CanSprayTimeDto
     */
    temperaturefeels?: number;
    /**
     * 
     * @type {number}
     * @memberof CanSprayTimeDto
     */
    temperatureMin?: number;
    /**
     * 
     * @type {number}
     * @memberof CanSprayTimeDto
     */
    temperatureMax?: number;
    /**
     * 
     * @type {number}
     * @memberof CanSprayTimeDto
     */
    humidity?: number;
    /**
     * 
     * @type {string}
     * @memberof CanSprayTimeDto
     */
    weatherMain?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CanSprayTimeDto
     */
    weatherDescription?: string | null;
    /**
     * 
     * @type {string}
     * @memberof CanSprayTimeDto
     */
    weatherIcon?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CanSprayTimeDto
     */
    weatherIconId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof CanSprayTimeDto
     */
    cloudsPercentage?: number;
    /**
     * 
     * @type {number}
     * @memberof CanSprayTimeDto
     */
    windSpeed?: number;
    /**
     * 
     * @type {number}
     * @memberof CanSprayTimeDto
     */
    windDirection?: number;
    /**
     * 
     * @type {string}
     * @memberof CanSprayTimeDto
     */
    cityName?: string | null;
}

export function CanSprayTimeDtoFromJSON(json: any): CanSprayTimeDto {
    return CanSprayTimeDtoFromJSONTyped(json, false);
}

export function CanSprayTimeDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CanSprayTimeDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
        'temperature': !exists(json, 'temperature') ? undefined : json['temperature'],
        'temperaturefeels': !exists(json, 'temperaturefeels') ? undefined : json['temperaturefeels'],
        'temperatureMin': !exists(json, 'temperatureMin') ? undefined : json['temperatureMin'],
        'temperatureMax': !exists(json, 'temperatureMax') ? undefined : json['temperatureMax'],
        'humidity': !exists(json, 'humidity') ? undefined : json['humidity'],
        'weatherMain': !exists(json, 'weatherMain') ? undefined : json['weatherMain'],
        'weatherDescription': !exists(json, 'weatherDescription') ? undefined : json['weatherDescription'],
        'weatherIcon': !exists(json, 'weatherIcon') ? undefined : json['weatherIcon'],
        'weatherIconId': !exists(json, 'weatherIconId') ? undefined : json['weatherIconId'],
        'cloudsPercentage': !exists(json, 'cloudsPercentage') ? undefined : json['cloudsPercentage'],
        'windSpeed': !exists(json, 'windSpeed') ? undefined : json['windSpeed'],
        'windDirection': !exists(json, 'windDirection') ? undefined : json['windDirection'],
        'cityName': !exists(json, 'cityName') ? undefined : json['cityName'],
    };
}

export function CanSprayTimeDtoToJSON(value?: CanSprayTimeDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'date': value.date === undefined ? undefined : (value.date.toISOString()),
        'temperature': value.temperature,
        'temperaturefeels': value.temperaturefeels,
        'temperatureMin': value.temperatureMin,
        'temperatureMax': value.temperatureMax,
        'humidity': value.humidity,
        'weatherMain': value.weatherMain,
        'weatherDescription': value.weatherDescription,
        'weatherIcon': value.weatherIcon,
        'weatherIconId': value.weatherIconId,
        'cloudsPercentage': value.cloudsPercentage,
        'windSpeed': value.windSpeed,
        'windDirection': value.windDirection,
        'cityName': value.cityName,
    };
}


